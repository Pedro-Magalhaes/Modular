// Script:    TesteUsuario.script
// Autor:     Yan Gurevitz
// Data:      04/dezembro/2017
// Propósito: Testar superficialmente o módulo usuario
//

== Inicializar valores
=declararparm   usuario0  int 0
=declararparm   usuario1  int 1
=declararparm   usuario2  int 2

=declararparm	struct0 int 0
=declararparm	struct1 int 1
=declararparm	struct2 int 2
=declararparm	struct3 int 3

=declararparm   nome0    string  "Ansem"
=declararparm	gen0	 string  "M"
=declararparm	idade0   int	 53
=declararparm   nome1    string  "Faker"
=declararparm	gen1	 string  "M"
=declararparm	idade1   int	 21
=declararparm   nome2    string  "Papaco"
=declararparm	gen2	 string  "O"
=declararparm	idade2   int	 37  
=declararparm   nome3    string  "IHZ"
=declararparm	gen3	 string  "F"
=declararparm	idade3   int	 116  
=declararparm	string0  string	 "A"  


=declararparm   OK                int  0
=declararparm   SemUsuarios       int  1
=declararparm   PerfilIncorreto   int  2
=declararparm   NaoAchou    	  int  3
=declararparm   FaltouMemoria     int  4
=declararparm	NaoInicializado	  int  5

=declararparm   pNULL          int  0
=declararparm   pNaoNULL       int  1

== Iniciar o usuario 0
=iniciarusuario      usuario0   

== Testar diferentes condições de criar usuários cobrindo todas as classes de equivalência
== Criar com idade inválida 
=criarusuario   	 usuario0   nome0   -1   gen0   PerfilIncorreto
== Criar com gênero inválido 
=criarusuario   	 usuario0   nome0   idade0   string0   PerfilIncorreto
== Criar corretamente e verificar se foi criado
=criarusuario   	 usuario0   nome0   idade0   gen0   OK
=totalusuarios		 usuario0   1

== Testar adicionar amigo cobrindo todas as classes de equivalência
=criarusuario   	 usuario0   nome1   idade1   gen1   OK
== Adicionar um amigo que não existe
=adicionaramigo   usuario0   nome2   NaoAchou
== Adicionar amigo corretamente
=adicionaramigo   usuario0   nome1   OK
== Adicionar amigo em módulo não inicializado
=adicionaramigo   usuario1   nome0   NaoInicializado

== Testar pegar nome do usuário corrente cobrindo todas as classes de equivalência
== Pegar nome em módulo não inicializado
=pegarcorrente   usuario1   NULL
== Pegar corrente em módulo com 0 usuários
=iniciarusuario      usuario2
=pegarcorrente   usuario2   NULL
== Pegar corrente corretamente
=pegarcorrente   usuario0   nome0

== Testar editar nome do corrente cobrindo todas as classes de equivalência

== Testar editar idade do corrente cobrindo todas as classes de equivalência

== Testar editar genero do corrente cobrindo todas as classes de equivalência

== Testar mudar usuário corrente cobrindo todas as classes de equivalência
== Mudar corrente em módulo não inicializado
=irusuario    usuario1   nome0   -1
== Mudar corrente para um usuário que não existe
=irusuario    usuario0   nome2   -1
== Mudar corrente para usuário de nome1 e verificar se foi corretamnte
=irusuario    usuario0   nome1   0
=pegarcorrente   usuario0   nome1

== Testar deletar usuario cobrindo todas as classes de equivalência
== Deletar usuario corrente em módulo não inicializado
=deletarusuario    usuario1   NaoInicializado
== Deletar usuário corrente em módulo com 0 usuários
=deletarusuario    usuario2   NaoInicializado
== Deletar usuário corrente corretamente e verificar se foi deletado
=deletarusuario    usuario0   OK
=totalusuarios		 usuario0   1

== Testar destruir usuários cobrindo todas as classes de equivalência
== Destruir usuário que já é NULL
=destruirusuarios   usuario1
== Destruir usuarios em módulo inicializado
=destruirusuarios   usuario0


// fim
